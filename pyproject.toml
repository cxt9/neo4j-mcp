[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "neo4j-mcp"
version = "0.1.0"
description = "Model Context Protocol (MCP) server and client for Neo4j database access"
readme = "readme.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    { name = "Neo4j MCP", email = "neo4j-mcp@example.com" },
]
keywords = [
    "mcp",
    "neo4j",
    "model-context-protocol",
    "llm",
    "graph-database",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp>=0.9.0",
    "neo4j>=5.15.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-requests",
]

[project.urls]
Homepage = "https://github.com/neo4j-mcp/neo4j-mcp"
Repository = "https://github.com/neo4j-mcp/neo4j-mcp"
Documentation = "https://github.com/neo4j-mcp/neo4j-mcp#readme"

[project.scripts]
neo4j-mcp-server = "neo4j_mcp.server:main"
neo4j-mcp-client = "neo4j_mcp.client:main"

[tool.hatch.build.targets.wheel]
packages = ["src/neo4j_mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "examples/",
    "tests/",
    "README.md",
    "LICENSE",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "-v --tb=short" 